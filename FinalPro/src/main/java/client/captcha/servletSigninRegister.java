/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client.captcha;

import static client.tools.GoogleAuthenticatorDemo.createQRCode;
import static client.tools.GoogleAuthenticatorDemo.getGoogleAuthenticatorBarCode;
import static client.tools.GoogleAuthenticatorDemo.getRandomSecretKey;
import static client.tools.GoogleAuthenticatorDemo.getTOTPCode;
import com.google.zxing.WriterException;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

@WebServlet(name = "servletSigninRegister", urlPatterns = {"/signin", "/register"})
public class servletSigninRegister extends HttpServlet {

    String secretKey = "";

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        String action = request.getParameter("action");
        if (action.equals("logout")) {
            HttpSession session = request.getSession();
            session.removeAttribute("usernameclient");
            request.getRequestDispatcher("index.jsp").forward(request, response);
        }

    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        String action = request.getParameter("action");
        System.out.println(action);

        if (action.equals("signin")) {

            String gRecaptchaResponse = request.getParameter("g-recaptcha-response");

            String user = request.getParameter("username");
            String pass = request.getParameter("password");

            boolean verify = VerifyRecaptcha.verify(gRecaptchaResponse);

            if (verify && user != null && pass != null) {

                if (user.equals("admin") && pass.equals("admin")) {
                    HttpSession session = request.getSession();
                    session.setAttribute("usernameclient", user);

                    response.sendRedirect("index.jsp");
                } else {
                    response.sendRedirect("signin.jsp");
                }
            } else {
                response.sendRedirect("signin.jsp");
            }

        }

        if (action.equals("register")) {
            System.out.println(action);
            String email = request.getParameter("email");
            System.out.println(email);
            try {
                // required for generating the PNG file on a server with no graphics hardware
                System.setProperty("java.awt.headless", "true");

                secretKey = getRandomSecretKey();
                String barCode = getGoogleAuthenticatorBarCode(secretKey, email, "Company");
                String tmpDir = System.getProperty("java.io.tmpdir");
                if (!tmpDir.endsWith(File.separator)) {
                    tmpDir += File.separator;
                }
//                String qrCodePath = tmpDir + "2fa-qr-code.png";
                String qrCodePath = "/Users/apple/NetBeansProjects/FinalPro/src/main/webapp/" + "2fa-qr-code.png";

                createQRCode(barCode, qrCodePath, 400, 400);

                request.setAttribute("qrCodePath", qrCodePath);
                request.getRequestDispatcher("register.jsp").forward(request, response);

                System.out.println("\nConfigure the Google Authenticator App by scanning the following QR code image:\n");
                System.out.println(qrCodePath + "\n");
                System.out.println("or by manually entering the secret key:\n");
                System.out.println(secretKey + "\n");
                System.out.println("Then verify that the 6 digit codes generated by Google Authenticator\n"
                        + "are synchronized with the following (ctrl-c to exit at any time):\n");

                String lastCode = null;
                String code = getTOTPCode(secretKey);
                if (!code.equals(lastCode)) {
                    System.out.println(code);
                }
                System.out.println(lastCode + "lastcode");

//                String lastCode = null;
//                while (true) {
//                    String code = getTOTPCode(secretKey);
//                    if (!code.equals(lastCode)) {
//                        System.out.println(code);
//                    }
//                    lastCode = code;
//                    try {
//                        Thread.sleep(1000);
//                    } catch (InterruptedException e) {
//                    };
//                }
            } catch (WriterException ex) {
                Logger.getLogger(servletSigninRegister.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

        if (action == null) {
            response.sendRedirect("signin.jsp");
        }

    }

    @Override
    public String getServletInfo() {
        return "Short description";
    }

}
